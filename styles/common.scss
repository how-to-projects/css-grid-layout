// https://www.youtube.com/watch?v=icnZSJbNsEM

$colors: 
rgba($color: #750e0e, $alpha: 1.0), 
rgba($color: #ee1818, $alpha: 1.0), 
rgba($color: #0e5d75, $alpha: 1.0), 
rgba($color: #3a3cce, $alpha: 1.0), 
rgba($color: #750e4a, $alpha: 1.0), 
rgba($color: #0e7570, $alpha: 1.0), 
rgba($color: #b4da6e, $alpha: 1.0), 
rgba($color: #d4bf44, $alpha: 1.0),
rgba($color: #721313, $alpha: 1.0);

$background-gradient: linear-gradient(to right, #33001b, #ff0084);
$background-gradient-dark: linear-gradient(
    to right bottom, 
    rgba(0, 0, 0, 1),
    rgba(0, 0, 0, 0.8)
    );

    $column-row-map: (
        1: (col: 2, row: 1),
        2: (col: 2, row: 2),
        3: (col: 1, row: 1),
        4: (col: 1, row: 2),
        5: (col: 3, row: 1),
        6: (col: 1, row: 1),
        7: (col: 1, row: 1),
        8: (col: 1, row: 1),
        9: (col: 3, row: 1)
    );

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    // font-size: 62.5%;
    font-family:Verdana, Geneva, Tahoma, sans-serif
}

body {
    display: flex;
    justify-content: center;
    align-self: center;
    min-height: 100vh;
    color: #fff;
    padding: 1rem;
    background: $background-gradient-dark;
}

.isometric {
    transform: rotateX(60deg) rotateY(0deg) rotateZ(45deg);
}


.container {
    position: relative;
    max-width: 100%;
    display: grid;
    grid-template-columns: repeat(auto-fill, [col] minmax(300px, 1fr));
    grid-template-rows: [row] minmax(100px, auto);
    margin: 10px;
    grid-auto-flow: dense;
    grid-gap: 10px;
    overflow: hidden;

    .box {
        // background-color: rgba(0, 0, 0, 0.5);
        padding: 20px;
        display: grid;
        font-size: 20px;
        place-items: center;
        text-align: center;
        color: #fff;
        transition: 0.5s ease-in-out;
        border-radius: 0.5rem;
    
        // set each cell color
        @for $i from 1 through 9 {
            &:nth-of-type(#{$i}) {
                background-color: nth($colors, $i);
            }
    
            // super glitchy
            // &:nth-child(#{$i}):hover {
            //     grid-column: span 3;
            //     grid-row: span 2;
            // }
        }
    }

    .box:hover {
        background-color: #e91e63 ;
        // -webkit-filter: invert(100%);
        // filter: invert(100%);
        transform: scale(1.1);
        vertical-align: middle;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
    }

    .box img {
        position: relative;
        max-width: 100px;
        margin-bottom: 10px;
        
    }

    @each $key, $value in  $column-row-map {
        .box:nth-child(#{$key}) {
            grid-column: span map-get($value, col);
            grid-row: span map-get($value, row);
        } 
     }

    //  .box:nth-child(1):hover {
    //     grid-column: span 3;
    //     grid-row: span 3;
    // }
}
// trying to make the last row expand to any empty space
// .container .box:last-child { 
//     grid-row: x/y; 
// }



@media (max-width: 991px) {
    .container {
        grid-template-columns: repeat(auto-fill, minmax(50%, 1fr));
        grid-template-rows: minmax(auto, auto);

        .box {
            grid-column: unset !important;
            grid-row: unset !important;
        }
    }
}